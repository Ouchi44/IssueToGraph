<!--

RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Fri Nov 04 05:31:13 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/SPARK-1537/SPARK-1537.xml?field=key&amp;field=summary
-->
<rss version="0.92">
<script/>
<channel>
<title>ASF JIRA</title>
<link>https://issues.apache.org/jira</link>
<description>This file is an XML representation of an issue</description>
<language>en-uk</language>
<build-info>
<version>6.3.4</version>
<build-number>6332</build-number>
<build-date>15-08-2014</build-date>
</build-info>
<item>
<title>
[SPARK-1537] Add integration with Yarn's Application Timeline Server
</title>
<link>https://issues.apache.org/jira/browse/SPARK-1537</link>
<project id="12315420" key="SPARK">Spark</project>
<description>
<p>It would be nice to have Spark integrate with Yarn's Application Timeline Server (see <a href="https://issues.apache.org/jira/browse/YARN-321" title="[Umbrella] Generic application history service" class="issue-link" data-issue-key="YARN-321"><del>YARN-321</del></a>, <a href="https://issues.apache.org/jira/browse/YARN-1530" title="[Umbrella] Store, manage and serve per-framework application-timeline data" class="issue-link" data-issue-key="YARN-1530"><del>YARN-1530</del></a>). This would allow users running Spark on Yarn to have a single place to go for all their history needs, and avoid having to manage a separate service (Spark's built-in server).</p> <p>At the moment, there's a working version of the ATS in the Hadoop 2.4 branch, although there is still some ongoing work. But the basics are there, and I wouldn't expect them to change (much) at this point.</p>
</description>
<environment/>
<key id="12709380">SPARK-1537</key>
<summary>
Add integration with Yarn's Application Timeline Server
</summary>
<type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
<priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
<status id="3" iconUrl="https://issues.apache.org/jira/images/icons/statuses/inprogress.png" description="This issue is being actively worked on at the moment by the assignee.">In Progress</status>
<statusCategory id="4" key="indeterminate" colorName="yellow"/>
<resolution id="-1">Unresolved</resolution>
<assignee username="-1">Unassigned</assignee>
<reporter username="vanzin">Marcelo Vanzin</reporter>
<labels></labels>
<created>Sat, 19 Apr 2014 00:02:02 +0000</created>
<updated>Fri, 12 Feb 2016 11:17:56 +0000</updated>
<component>YARN</component>
<due/>
<votes>11</votes>
<watches>42</watches>
<comments>
<comment id="14081465" author="vanzin" created="Thu, 31 Jul 2014 21:02:13 +0000">
<p>I'm working on this but this all sort of depends on progress being made on the Yarn side, so at this moment I'm not yet ready to send any PRs.</p>
</comment>
<comment id="14086657" author="zhazhan" created="Tue, 5 Aug 2014 19:53:50 +0000">
<p>I am also interested in it and trying to integrate spark to yarn timeline server. Do you have any concrete plan in mind? I can start prototype it and then we can work together on this topic. How do you think?</p>
</comment>
<comment id="14086663" author="vanzin" created="Tue, 5 Aug 2014 19:58:45 +0000">
<p>I have a prototype ready. But I'm still investigating some issues with the Yarn side of things (mostly around security and scalability). Given that I have some code pretty much ready, you're welcome to spend time on it, but you'd be duplicating work I already have done.</p>
</comment>
<comment id="14086808" author="zhazhan" created="Tue, 5 Aug 2014 21:30:53 +0000">
<p>Do you mind sharing your thoughts, design document or prototype code?</p> <p>Thanks.</p>
</comment>
<comment id="14086817" author="vanzin" created="Tue, 5 Aug 2014 21:32:18 +0000">
<p>Currently busy with other more urgent tasks, but I'll push to my repo and post a link when I get some time.</p>
</comment>
<comment id="14088438" author="vanzin" created="Wed, 6 Aug 2014 23:09:15 +0000">
<p>Current code is here:<br/> <a href="https://github.com/vanzin/spark/tree/yarn-timeline" class="external-link" rel="nofollow">https://github.com/vanzin/spark/tree/yarn-timeline</a></p> <p>Very much WIP at this point.</p>
</comment>
<comment id="14104881" author="zhazhan" created="Thu, 21 Aug 2014 00:47:25 +0000">
<p>Thanks for sharing this. Do you have concrete plan or timeline for this Jira?</p>
</comment>
<comment id="14106164" author="vanzin" created="Thu, 21 Aug 2014 23:40:37 +0000">
<p>No concrete timeline at the moment. I'm just starting to look at the 2.5.0 version of ATS so I can incorporate things into my patch.</p>
</comment>
<comment id="14139396" author="zzhan" created="Thu, 18 Sep 2014 19:52:48 +0000">
<p>Do you have any update on this, or any schedule in your mind yet?</p>
</comment>
<comment id="14139402" author="vanzin" created="Thu, 18 Sep 2014 19:59:05 +0000">
<p>No set schedule as of now. The current code "works", but it's blocked by at least one bug I filed against Yarn (<a href="https://issues.apache.org/jira/browse/YARN-2444" title="Primary filters added after first submission not indexed, cause exceptions in logs." class="issue-link" data-issue-key="YARN-2444"><del>YARN-2444</del></a>).</p> <p>Also, I'm not comfortable with the current ATS design. There's discussion on <a href="https://issues.apache.org/jira/browse/YARN-1530" title="[Umbrella] Store, manage and serve per-framework application-timeline data" class="issue-link" data-issue-key="YARN-1530"><del>YARN-1530</del></a> about making it better and I want to wait until that work at least starts, in case it causes changes in the API. While it's possible to submit the code without the Yarn changes in, I'm loth to add support for something that just isn't production-ready yet.</p>
</comment>
<comment id="14189651" author="zzhan" created="Thu, 30 Oct 2014 05:09:28 +0000">
<p>Hi Marcelo,</p> <p>Do you have update on this? If you don't mind, I can work on your branch to get this done asap. Please let me know how do you think?</p>
</comment>
<comment id="14190396" author="vanzin" created="Thu, 30 Oct 2014 17:12:32 +0000">
<p>Hi Zhan,</p> <p>As I mentioned, I'm waiting for issues being discussed in <a href="https://issues.apache.org/jira/browse/YARN-1530" title="[Umbrella] Store, manage and serve per-framework application-timeline data" class="issue-link" data-issue-key="YARN-1530"><del>YARN-1530</del></a> to be resolved first. The current plans, as far as I am aware, would result in incompatible API changes in the timeline server API, so I'd rather wait for that before pushing any solution in Spark.</p> <p>You're free to come up with your own solution if you want, but I would seriously recommend waiting for the timeline server to actually reach production-level quality before going with integration, especially as far as its API goes.</p>
</comment>
<comment id="14190849" author="zjshen" created="Thu, 30 Oct 2014 21:10:16 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vanzin" class="user-hover" rel="vanzin">Marcelo Vanzin</a>, thanks for introducing YARN timeline server to Spark. Let me briefly summarize the current status of the timeline server and answer some concerns here. Spark folks who are interested in this monitoring service offered by YARN can go ahead to <a href="https://issues.apache.org/jira/browse/YARN-1530" title="[Umbrella] Store, manage and serve per-framework application-timeline data" class="issue-link" data-issue-key="YARN-1530"><del>YARN-1530</del></a> to read the design doc and watch the latest progress.</p> <p>1. The essential functions or the timeline service have been available since Hadoop 2.4. Basically, the user can organize the app's history or metrics according to timeline data model and post it the the timeline server. Later on, user or admin can come back to query this information to analyze how the app was going. The essential APIs keep unchanged from 2.4 to the coming 2.6. There should <b>NOT</b> be any incompatible API changes that will block this work. Moreover, Keeping compatible is always in our consideration when coming up with new features in the following Hadoop releases.</p> <p>2. It's <b>NOT</b> exactly that the timeline server is not production-ready. In fact, Apache Tez has already integrated the timeline server for logging the history information. In the coming Hadoop 2.6, MapReduce is also enabled to publish the history information to the timeline server, too. Moreover, within the scope of YARN, a built-in generic history service on top of the timeline service is available to YARN users to watch all kinds of apps. Hence, with several successful pioneer, Spark should be confident enough to take the new merit of YARN.</p> <p>3. While YARN community is progressing quickly to improve the timeline server in terms of security (coming 2.6), high availability, scalability, better client libs and so on, it should not disturb the initial attempt for Spark to embrace the timeline server, but will offer better experience if Spark is riding on it.</p> <p>If you have other issue of high priority to work on, I think <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhazhan" class="user-hover" rel="zhazhan">Zhan Zhang</a> will be able to help this integration. Thanks!</p>
</comment>
<comment id="14190863" author="vanzin" created="Thu, 30 Oct 2014 21:19:28 +0000">
<blockquote><p>...security (coming 2.6), high availability, scalability, better client libs and so on...</p></blockquote> <p>That's exactly my point about the ATS not being production-level quality yet. The current plans I'm aware of would require changes in the ATS API. Since Spark does not support the ATS at the moment, I'd rather have it support the new-and-secure-and-scalable-and-available API than the current one. Otherwise you'll get into the mess of having to conditionally compile code for both APIs, or implement part of those features into your own client code (something I've done in my proof-of-concept but I'd really like to avoid, because it's really just trying to work around limitations in the current ATS design).</p> <p>So, short version of what I'm trying to say: yes, you can build something that talks to the current ATS. But given that it currently has shortcomings, and the fix for those will, as far as I know, affect the client API, I don't see the point in trying to push that integration at this moment when Spark already has a working solution for job history, just so that you'll ship code that will be immediately deprecated by the new ATS...</p>
</comment>
<comment id="14190946" author="zjshen" created="Thu, 30 Oct 2014 22:22:05 +0000">
<blockquote><p>That's exactly my point about the ATS not being production-level quality yet. The current plans I'm aware of would require changes in the ATS API.</p></blockquote> <p>Not to mention the definition of production ready (which differs from community to community, such as Tez and MapReduce), I'm curious about the required API changes of the timeline server. Please elaborate the <b>changes</b> in case I've missed some discussion. On the other side, according to my understanding of the timeline server, the ongoing and the future improvement is: </p> <p>1) Security is coming with Hadoop 2.6, which doesn't affect the usage of the existing APIs in a insecure mode. AFAIK, Spark is working with Hadoop 2.3(4). It should be okay to ride on the timeline server in insecure mode. Whenever upgrading to Hadoop 2.6, you just need to turn on the security switch.</p> <p>2) Timeline availability and scalability is going to be a server side improvement, but doesn't affect user-faced API. In the scope of YARN, we have already successfully enhance RM with the HA feature while making it transparent to the user. I'm not aware of the major blocker that prevents the timeline server to achieve the same goal.</p> <p>3) For the client libs, we're trying to help to users to utilize the timeline service more easily (e.g., <a href="https://issues.apache.org/jira/browse/YARN-2517" title="Implement TimelineClientAsync" class="issue-link" data-issue-key="YARN-2517"><del>YARN-2517</del></a>, <a href="https://issues.apache.org/jira/browse/YARN-2673" title="Add retry for timeline client put APIs" class="issue-link" data-issue-key="YARN-2673"><del>YARN-2673</del></a>), which are either transparent or additions. As I've mentioned before, we're careful about any proposed changes that will break the incompatibility.</p> <p>I'm commenting on this Jira to share more insights about the timeline server to Spark folks in case the folks interested in this YARN offer. It's up to Spark folks to decide whether they want to make use of it or when they make use of it.</p>
</comment>
<comment id="14190956" author="vanzin" created="Thu, 30 Oct 2014 22:29:22 +0000">
<blockquote><p>Please elaborate the changes in case I've missed some discussion</p></blockquote> <p>That's part of why I'm waiting on <a href="https://issues.apache.org/jira/browse/SPARK-1530" title="Streaming UI test can hang indefinitely" class="issue-link" data-issue-key="SPARK-1530"><del>SPARK-1530</del></a>. There's been no activity in a while; I've been told there have been offline discussions but I don't see any updates on the actual issue itself, so that's the main reason why I've been holding off on this work: I don't feel it's a good investment of time to go forward with something that might change in the near future.</p> <p>It would be great if you could update that bug with a concrete plan for the post-2.6 updates related to reliability and other features. If they really don't affect the client API, then great, I can continue my Spark-side work without worries. But again, I've mainly been waiting because of the radio silence from the ATS side w.r.t. the issues that I think are important to Spark.</p>
</comment>
<comment id="14191007" author="vanzin" created="Thu, 30 Oct 2014 23:10:39 +0000">
<p>BTW, if you want a list of things I think are important for Spark, here are some quick ones:</p> <ul> <li><a href="https://issues.apache.org/jira/browse/YARN-2521" title="Reliable TimelineClient" class="issue-link" data-issue-key="YARN-2521"><del>YARN-2521</del></a> (I've sort of implemented this in my code, but would really like to not have to care about it)</li> <li><a href="https://issues.apache.org/jira/browse/YARN-2423" title="TimelineClient should wrap all GET APIs to facilitate Java users" class="issue-link" data-issue-key="YARN-2423"><del>YARN-2423</del></a> (note how this is a new API)</li> <li><a href="https://issues.apache.org/jira/browse/YARN-2444" title="Primary filters added after first submission not indexed, cause exceptions in logs." class="issue-link" data-issue-key="YARN-2444"><del>YARN-2444</del></a></li> </ul> <p><a href="https://issues.apache.org/jira/browse/YARN-2521" title="Reliable TimelineClient" class="issue-link" data-issue-key="YARN-2521"><del>YARN-2521</del></a> might be the same as <a href="https://issues.apache.org/jira/browse/YARN-2673" title="Add retry for timeline client put APIs" class="issue-link" data-issue-key="YARN-2673"><del>YARN-2673</del></a>, no? <a href="https://issues.apache.org/jira/browse/YARN-2513" title="Host framework UIs in YARN for use with the ATS" class="issue-link" data-issue-key="YARN-2513"><del>YARN-2513</del></a> is sort of interesting but not necessary.</p>
</comment>
<comment id="14191052" author="zzhan" created="Thu, 30 Oct 2014 23:46:13 +0000">
<p>Yarn-2521 can make client easier to use, but not critical. Some application logic make the client cache difficult to be generic.<br/> Yarn-2444 may be already obsolete. </p>
</comment>
<comment id="14191060" author="vanzin" created="Thu, 30 Oct 2014 23:54:52 +0000">
<p>I think it's pretty critical when you can't upload your data because the server is down; it means we can't really recommend using the current ATS because it's not reliable. I understand it doesn't affect the client API and we can still have the code in, but it's an important feature that seems to be missing.</p> <p><a href="https://issues.apache.org/jira/browse/YARN-2423" title="TimelineClient should wrap all GET APIs to facilitate Java users" class="issue-link" data-issue-key="YARN-2423"><del>YARN-2423</del></a>, though, is really something that can't be done today without poking into private Yarn classes or writing a bunch of extra code. I really wouldn't want to have to support any of those two options in Spark.</p>
</comment>
<comment id="14192491" author="zjshen" created="Fri, 31 Oct 2014 21:09:47 +0000">
<blockquote><p>BTW, if you want a list of things I think are important for Spark, here are some quick ones:</p></blockquote> <p>Thanks for sharing the details, which are more helpful to clean up the puzzles than some big but vague statement. Let me go through the aforementioned Jiras:</p> <ul> <li><a href="https://issues.apache.org/jira/browse/YARN-2521" title="Reliable TimelineClient" class="issue-link" data-issue-key="YARN-2521"><del>YARN-2521</del></a>: I'd like to keep it open for some further client improvement, such as local timeline data caching, while <a href="https://issues.apache.org/jira/browse/YARN-2673" title="Add retry for timeline client put APIs" class="issue-link" data-issue-key="YARN-2673"><del>YARN-2673</del></a> already made the client retry when the server temporally doesn't respond. Please note that "I think it's pretty critical when you can't upload your data because the server is down" is <b>no longer true</b> after <a href="https://issues.apache.org/jira/browse/YARN-2673" title="Add retry for timeline client put APIs" class="issue-link" data-issue-key="YARN-2673"><del>YARN-2673</del></a>. On the other side, At the point of view of the API, it should keep stable.</li> </ul> <ul> <li><a href="https://issues.apache.org/jira/browse/YARN-2423" title="TimelineClient should wrap all GET APIs to facilitate Java users" class="issue-link" data-issue-key="YARN-2423"><del>YARN-2423</del></a>: This is proposed to improve the Java libs by adding GET APIs. They are used to query data, NOT to put data. We do this to help the use case that the developers write Java code to implement the UI to analyze the timeline data. Framework integration mainly deals with PUT APIs, and the Java client libs are already there. Take one step back, apart from the client libs, the RESTful APIs are always there, which is programming language neutral, and useful to non-Java developers.</li> </ul> <ul> <li><a href="https://issues.apache.org/jira/browse/YARN-2444" title="Primary filters added after first submission not indexed, cause exceptions in logs." class="issue-link" data-issue-key="YARN-2444"><del>YARN-2444</del></a>: It's may be a bug or an improper use case. According to the exception, the user doesn't pass the authorization for some reason. It is reported for 2.5, and is probably no longer valid after we fixed a bunch of security issues for 2.6. We need to do more validation for this issue before a conclusion. Anyway, it's obviously an internal issue happening in secure mode only, which should not the API CHANGES.</li> </ul> <blockquote><p>I understand it doesn't affect the client API and we can still have the code in,</p></blockquote> <p>It seems that we have the agreement that the current timeline service offering is not blocking the Spark integration work.</p>
</comment>
<comment id="14192502" author="vanzin" created="Fri, 31 Oct 2014 21:16:15 +0000">
<blockquote><p>This is proposed to improve the Java libs by adding GET APIs. They are used to query data, NOT to put data.</p></blockquote> <p>Spark needs both to put and read data, otherwise the ATS is useless for Spark. The current goal of Spark is to use the ATS as a store for its history data, since the data itself is not considered public and stable itself.</p> <p>So there is no point in integration if you can only write data. (I know you can read data through other means, but I don't want to write a custom REST client just to get ATS support in.)</p> <blockquote><p>It is reported for 2.5, and is probably no longer valid after we fixed a bunch of security issues for 2.6.</p></blockquote> <p>I'm not sure why you say it's security-related since there nothing security-related in the example code I posted. And if something doesn't work in 2.5 but works in 2.6, it means we (and by that I mean Spark) have to restrict our support to the versions where things work - even if the underlying API is exactly the same.</p>
</comment>
<comment id="14192538" author="zjshen" created="Fri, 31 Oct 2014 21:36:44 +0000">
<blockquote><p>Spark needs both to put and read data</p></blockquote> <p>It's again a vague statement. Can you share your design detail, such that we can evaluate it is really necessary? <br/> And what is the actual way of visualizing data? And integration work is not just single bug fix patch, we can divide work into a sequent of sub tasks, and the first step is to enable Spark job to be able to putting the data into the timeline server. By doing this, not only Spark's only web front can visualize job history, it also enable the third-party tools to do Spark job analysis too.</p> <blockquote><p>I'm not sure why you say it's security-related since there nothing security-related in the example code I posted. </p></blockquote> <p>I said "According to the exception, the user doesn't pass the authorization for some reason." If you don't agree on it, please post your investigation on <a href="https://issues.apache.org/jira/browse/YARN-2444" title="Primary filters added after first submission not indexed, cause exceptions in logs." class="issue-link" data-issue-key="YARN-2444"><del>YARN-2444</del></a>, YARN folks will help you on this issue.</p> <blockquote><p>if something doesn't work in 2.5 but works in 2.6,</p></blockquote> <p>No matter the integration with timeline service, Spark on YARN is picking Hadoop versions now. It doesn't make sense to ask for a feature by using an early version that hasn't it.</p>
</comment>
<comment id="14192561" author="vanzin" created="Fri, 31 Oct 2014 21:48:49 +0000">
<blockquote><p>It's again a vague statement. </p></blockquote> <p>I don't know what is vague about wanting to read the data you write.</p> <blockquote><p>Can you share your design detail</p></blockquote> <p>I already did way better than that, way earlier in this bug: I shared the actual code. For this particular question, here it is:<br/> <a href="https://github.com/vanzin/spark/blob/yarn-timeline/yarn/timeline/src/main/scala/org/apache/spark/deploy/yarn/timeline/YarnTimelineProvider.scala" class="external-link" rel="nofollow">https://github.com/vanzin/spark/blob/yarn-timeline/yarn/timeline/src/main/scala/org/apache/spark/deploy/yarn/timeline/YarnTimelineProvider.scala</a></p> <p>See how it reads data from the ATS? It feeds it into the Spark history server, where the data can be visualized. It's using Yarn internal APIs, which is generally bad practice.</p> <blockquote><p>If you don't agree on it, please post your investigation on <a href="https://issues.apache.org/jira/browse/YARN-2444" title="Primary filters added after first submission not indexed, cause exceptions in logs." class="issue-link" data-issue-key="YARN-2444"><del>YARN-2444</del></a>, YARN folks will help you on this issue.</p></blockquote> <p>I posted the error and the code to reproduce it. I don't know what else do you expect from me. If you think it's an authorization issue, test it with 2.6 and close the bug if you believe it's fixed.</p> <blockquote><p>No matter the integration with timeline service, Spark on YARN is picking Hadoop versions now. It doesn't make sense to ask for a feature by using an early version that hasn't it.</p></blockquote> <p>I'm not sure I really understood what you're trying to say here. Yes, we have to pick versions. We need a version that supports the features we need. Even if the API in 2.5 didn't change in 2.6, it seems to have bugs that prevent my current code from working, so there is no point in trying to integrate with 2.5 as far as I'm concerned. And as far as I know, 2.6 hasn't been released yet. (BTW, my code used to work with 2.4.)</p>
</comment>
<comment id="14198852" author="vanzin" created="Wed, 5 Nov 2014 18:54:13 +0000">
<p>I believe with <a href="https://issues.apache.org/jira/browse/YARN-2033" title="Merging generic-history into the Timeline Store" class="issue-link" data-issue-key="YARN-2033"><del>YARN-2033</del></a> and <a href="https://issues.apache.org/jira/browse/YARN-2423" title="TimelineClient should wrap all GET APIs to facilitate Java users" class="issue-link" data-issue-key="YARN-2423"><del>YARN-2423</del></a> I can work around <a href="https://issues.apache.org/jira/browse/YARN-2444" title="Primary filters added after first submission not indexed, cause exceptions in logs." class="issue-link" data-issue-key="YARN-2444"><del>YARN-2444</del></a> even if it's still an issue, so I'll add the dependency accordingly.</p>
</comment>
<comment id="14326778" author="zzhan" created="Thu, 19 Feb 2015 00:10:26 +0000">
<p>I have sent a PR with WIP for people who are interested. <br/> <a href="https://github.com/apache/spark/pull/4683/files" class="external-link" rel="nofollow">https://github.com/apache/spark/pull/4683/files</a></p>
</comment>
<comment id="14327038" author="apachespark" created="Thu, 19 Feb 2015 06:28:28 +0000">
<p>User 'zhzhan' has created a pull request for this issue:<br/> <a href="https://github.com/apache/spark/pull/4683" class="external-link" rel="nofollow">https://github.com/apache/spark/pull/4683</a></p>
</comment>
<comment id="14328179" author="zzhan" created="Thu, 19 Feb 2015 22:01:17 +0000"><p>Patch against v1.2.1</p></comment>
<comment id="14328180" author="zzhan" created="Thu, 19 Feb 2015 22:02:20 +0000">
<p>High level design doc for spark ATS integration.</p>
</comment>
<comment id="14329460" author="vanzin" created="Fri, 20 Feb 2015 20:01:53 +0000">
<p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zzhan" class="user-hover" rel="zzhan">Zhan Zhang</a>, thanks for uploading the document.</p> <p>Reading through it, I don't see anything that is really that much different from my initial proof-of-concept. The points I'd like to highlight are:</p> <ul class="alternate" type="square"> <li>It still depends on <a href="https://issues.apache.org/jira/browse/YARN-2423" title="TimelineClient should wrap all GET APIs to facilitate Java users" class="issue-link" data-issue-key="YARN-2423"><del>YARN-2423</del></a>, or at least on some effort to write a REST client that does not depend on internal Yarn classes.</li> <li>What about overhead of the read code? Large jobs with lots of tasks, or really long jobs such as Spark Streaming jobs, will have a really large amount of events. Fetching them all in one batch would require a lot of memory for serializing the data on both sides (ATS and History Server).</li> <li>Any security considerations? I haven't really kept up-to-date with the security changes in the ATS after I ran into issues with my p.o.c.; but mainly, does the Spark job need any special tokens to talk to the ATS when security is enabled? Does the ATS guarantee that only the job itself (or someone with the right credentials) can add events to its timeline? Or is that all handled transparently, somehow, by the client library?</li> <li>Does <a href="https://issues.apache.org/jira/browse/YARN-2928" title="YARN Timeline Service v.2: alpha 1" class="issue-link" data-issue-key="YARN-2928"><del>YARN-2928</del></a> affect the design in any way? I took a quick look at the data model, so hopefully they'll keep things backwards compatible. But it would kinda suck to add support for an API with a limited shelf life if that's not the case.</li> </ul>
</comment>
<comment id="14329649" author="zzhan" created="Fri, 20 Feb 2015 22:11:20 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vanzin" class="user-hover" rel="vanzin">Marcelo Vanzin</a> Thanks for the comments. I don't understand you keep saying "my code does not have many differences form your code." We are working for apache project, and we all follow apache policy. Here is the link for apache license details:<br/> <a href="http://www.apache.org/licenses/LICENSE-2.0" class="external-link" rel="nofollow">http://www.apache.org/licenses/LICENSE-2.0</a>.</p> <p>Since you think your prototype is ready half year ago, as I request several times, why not post your workable patch and design and move forward. I will explain to you clearly "what's the major difference of the core design of my code from yours" . The patch size is small, and the design is not so complicated, but I am sure to show you where those core design come from.</p> <p>After you post your design and code, we can start from there.</p> <p>Thanks.</p> <p>Zhan Zhang</p>
</comment>
<comment id="14329660" author="vanzin" created="Fri, 20 Feb 2015 22:18:03 +0000">
<p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zzhan" class="user-hover" rel="zzhan">Zhan Zhang</a>,</p> <p>I already posted the link to my code in this bug several times. The reason why I haven't sent a PR is the exact reason I raised about your spec and your patch: it uses private Yarn APIs. I've said this several times, and I really don't understand what part of it you don't understand. Pardon me if I haven't been clear about it.</p> <p>Also note how there's Yarn bug in the list of blocker bugs for this one. That's because my p.o.c. code depends on that bug to be fixed before it can move forward. If you have a design that is not blocked by that code, and does not use internal APIs, feel free to remove the link and post it.</p> <p>Here's the link to the comment with the link to my code, dated August '14:<br/> <a href="https://issues.apache.org/jira/browse/SPARK-1537?focusedCommentId=14088438&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14088438" class="external-link" rel="nofollow">https://issues.apache.org/jira/browse/SPARK-1537?focusedCommentId=14088438&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14088438</a></p> <p>A link you have already seen, since you used parts of that code in your patch.</p> <p>So please, can you reply to my actual comments instead of keep going back to this issue? My comments have nothing to do with the fact that I've written a p.o.c. for this feature. They're issues that exist in your spec and your code independent of anything I've done.</p>
</comment>
<comment id="14329664" author="zzhan" created="Fri, 20 Feb 2015 22:19:23 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vanzin" class="user-hover" rel="vanzin">Marcelo Vanzin</a> If you don't have bandwidth, or don't know how to move forward with this JIRA after a long time. I don't mind to take it over.</p>
</comment>
<comment id="14329678" author="zzhan" created="Fri, 20 Feb 2015 22:30:05 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vanzin" class="user-hover" rel="vanzin">Marcelo Vanzin</a> I declare "integrate your code" from the first submission of PR. Do you want to count how many times you keeping saying this? </p> <p> "Here's the link to the comment with the link to my code, dated August '14". Now spark is under the vote for 1.3, and today is 2/20/2015. Is it so difficult submit a workable patch and design doc? </p>
</comment>
<comment id="14329681" author="vanzin" created="Fri, 20 Feb 2015 22:32:28 +0000">
<p>It's impossible to submit a patch when the implementation is currently blocked on a feature that doesn't exist in Yarn. Please check the "is blocked by" link at the top of this bug.</p> <p>If you're willing to write the code to work around that missing feature, please include that in your spec and patch. I am not and would rather wait for Yarn instead.</p>
</comment>
<comment id="14329691" author="srowen" created="Fri, 20 Feb 2015 22:38:10 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zzhan" class="user-hover" rel="zzhan">Zhan Zhang</a> I also can't figure out what you are suggesting here. You have proposed a patch, and you've been given feedback with specific reasons it shouldn't be committed to Spark. I agree with those, FWIW, thought I think they can be overcome soon. I assume others agree, given the silence <img class="emoticon" src="https://issues.apache.org/jira/images/icons/emoticons/help_16.gif" height="16" width="16" align="absmiddle" alt="" border="0"/>. You haven't responded to these specific points. As it stands I think that's your answer: these YARN issues need to be addressed &#8211; either fixed or agreed to be not an issue.</p> <p>Nobody needs to 'take over'. I'm not clear why you think you have been waiting on something or someone to give you code. Right now the only thing this is waiting on is for you or <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zjshen" class="user-hover" rel="zjshen">Zhijie Shen</a> or anyone to address the YARN API issues. Rather than keep the broken record going, why not address the YARN API issues highlighted here? sorry, the answer may be that you can't commit this patch you want to by yourself but that's just how OSS works.</p>
</comment>
<comment id="14329700" author="zzhan" created="Fri, 20 Feb 2015 22:48:06 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sowen" class="user-hover" rel="sowen">Sean Owen</a> From the whole context, I believe you understand what happened here. Let's be professional. </p> <p>My request is "if someone want to try this alpha feature, we can provide a patch at least so that people can give it a try. Even if it cannot go upstream due to various reasons." </p> <p>Due to Yarn block, we should discuss with the yarn community, instead of filing a bug and wait forever. </p>
</comment>
<comment id="14329739" author="srowen" created="Fri, 20 Feb 2015 23:24:41 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zzhan" class="user-hover" rel="zzhan">Zhan Zhang</a> You have provided a patch as a PR right? anyone can try it. Request granted.</p> <p>Given the YARN JIRAs already referenced here, some of which have patches ready to go too, I think it has been discussed in YARN too? What isn't happening with YARN that should be, and, can you help with it? I'm not sure if that's where you are saying the waiting is. That is: hasn't this been blocked on YARN changes for a long time?</p> <p>I get it, one person's 'outstanding bug' is another's 'will not fix' but that's the give and take of OSS. If you want this feature in Spark, and people are asking that it should depend on some YARN changes &#8211; then what do you think about lobbying for those YARN changes? or do you disagree that they're necessary, and can you argue that here please?</p> <p>I don't understand your second reply. Yes, it sounds like two people have a similar solution with a similar problem with YARN APIs. You say you're not waiting on code now, but have repeatedly asked Marcelo to share some (other?) code. It's odd since, yes, it's very clear you acknowledge you've already seen his code and reused a bit, which is entirely fine. I hope we're done with that exchange.</p> <p>I sense some insinuation that code is being 'hidden' in bad faith, but I can't figure out the conspiracy. I see every willingness to make <b>your</b> change alone here, if you propose something that addresses the YARN issues raised here. You are <b>not</b> blocked on anyone else's patch. However all of us are 'blocked' on the consensus of community / committers that care about this issue, and it looks like the response is clear so far: not until YARN API stuff is sorted out one way or the other.</p> <p>Are you suggesting this patch should be committed without the YARN changes? or that you're working on the YARN changes? what do you want to take over and do next?</p>
</comment>
<comment id="14329828" author="zzhan" created="Sat, 21 Feb 2015 00:21:16 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sowen" class="user-hover" rel="sowen">Sean Owen</a> In JIRA, we share the code so that other people can comment and review. I am not waiting for patch. But It is hard to comment or review patch given a hyper-link. </p> <p>I never think to make my change alone. Actually from the beginning I acknowledge his contribution, and don't mind closing my PR and help to review his at all if you follow the PR record. Do you agree?</p> <p>You mention you sense some insinuation and conspiracy. I didn't sense it. Can you please educate me if you figure it out?</p> <p>Let's go back to technical: Overall, it is early adoption for timeline service. It is alpha feature, but most functionality is working although with some walkaround.</p> <p>REST client: Currently Timeline client does not provide retrieve API. So we walk around with the similar approach to the timeclient its own implementation. This needs to be changed after timeline component provide more mature API.</p> <p>Read overhead and scalability: The effort is in the roadmap in yarn timeline service. This is a critical feature to use timeline service. Current HDFS approach in spark may not scalable due to similar reason (point me out if I am wrong), and timeline service may be more promising, although it is not there yet.</p> <p>Security: The security is handled transparently in timeline client. </p> <p>ACL: Timeline has ACL control as in hadoop-2.6, and client can create and set domain with R/W so that control the permission. </p>
</comment>
<comment id="14329852" author="vanzin" created="Sat, 21 Feb 2015 00:37:29 +0000">
<p>Hi <a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhzhan" class="user-hover" rel="zhzhan">Zhan Zhang</a>,</p> <blockquote><p>But It is hard to comment or review patch given a hyper-link. </p></blockquote> <p>Perhaps you're not familiar with all of Github's features, but you can click on each individual commit and comment on the code right there, just like you can on a PR created from those commits. Even if that doesn't sound very appealing, it's not hard to copy &amp; paste the code and comment here if you really want to. Or generate a downloadable diff from the commits (just add ".diff" at the end of the commit URL, e.g. <a href="https://github.com/vanzin/spark/commit/c1365e0de264daa015c61a2248c80dfdea705786.diff" class="external-link" rel="nofollow">https://github.com/vanzin/spark/commit/c1365e0de264daa015c61a2248c80dfdea705786.diff</a>).</p> <blockquote><p>REST client: Currently Timeline client does not provide retrieve API.</p></blockquote> <p>That's the main reason why this feature hasn't moved forward. Using internal APIs to achieve that is something we're not willing to do in Spark, because it exposes us to future breakages and makes compatibility harder to maintain (just look at what has been done for Hive). So we either need the new API in Yarn, or we need to invest time to create a client API that does not use Yarn's classes.</p> <blockquote><p>ACL: Timeline has ACL control as in hadoop-2.6</p></blockquote> <p>I'll believe you here since I haven't looked at that code yet. But it seems like it requires work on the client side, which is not currently covered in your spec.</p> <blockquote><p>Read overhead and scalability: The effort is in the roadmap in yarn timeline service. This is a critical feature to use timeline service. Current HDFS approach in spark may not scalable due to similar reason</p></blockquote> <p>I think we're talking about different things. What I'm referring to is that the current code that reads from the ATS reads all events of a particular entity at the same time. If that entity has a large number of events, that will require a lot of memory on the ATS side to serialize the data, and a lot of memory on the Spark History Server side to deserialize it. It's orthogonal to whether the backing store is scalable or not.</p>
</comment>
<comment id="14329885" author="zzhan" created="Sat, 21 Feb 2015 01:11:04 +0000">
<p><a href="https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vanzin" class="user-hover" rel="vanzin">Marcelo Vanzin</a> We should centralized all comments and reviews in one place, instead of going to different links. Also, we want to the reviewed code is updated, instead of based on some old version. </p> <p>Let's go to technical:</p> <p>1. We all agree on this one about timeline client, and this is why it is alpha feature. Hive is a good example, but nobody can deny its importance in spark.<br/> 2. ACL is included in the patch, but not in the spec.<br/> 3. I understand your question, but the scope of my respond may be too big. To solve this, more work is needed on the entity design.</p> <p>Let's keep an eye on these issues. </p>
</comment>
<comment id="14385890" author="stevel@apache.org" created="Sun, 29 Mar 2015 18:47:34 +0000">
<ol> <li>I've just tried to see where <a href="https://issues.apache.org/jira/browse/YARN-2444" title="Primary filters added after first submission not indexed, cause exceptions in logs." class="issue-link" data-issue-key="YARN-2444"><del>YARN-2444</del></a> stands; I can't replicate it in trunk but I've submitted the tests to verify that it isn't there.</li> <li>for <a href="https://issues.apache.org/jira/browse/YARN-2423" title="TimelineClient should wrap all GET APIs to facilitate Java users" class="issue-link" data-issue-key="YARN-2423"><del>YARN-2423</del></a> Spark seems kind of trapped. It needs an api tagged as public/stable; Robert's patch has the API, except it's being rejected on the basis that "ATSv2 will break it". So it can't be tagged as stable. So there's no API for GET operations until some undefined time <tt>t1 &gt; now()</tt> —and then, only for Hadoop versions with it. Which implies it won't get picked up by Spark for a long time.</li> </ol> <p>I think we need to talk to the YARN dev team and see what can be done here. Even if there's no API client bundled into YARN, unless the v1 API and its paths beginning <tt>/ws/v1/timeline/</tt> are going to go away, then a REST client is possible; it may just have to be done spark-side, where at least it can be made resilient to hadoop versions. </p>
</comment>
<comment id="14485258" author="apachespark" created="Wed, 8 Apr 2015 13:52:52 +0000">
<p>User 'steveloughran' has created a pull request for this issue:<br/> <a href="https://github.com/apache/spark/pull/5423" class="external-link" rel="nofollow">https://github.com/apache/spark/pull/5423</a></p>
</comment>
<comment id="14492303" author="stevel@apache.org" created="Mon, 13 Apr 2015 11:46:02 +0000">
<p><a href="https://issues.apache.org/jira/browse/YARN-3539" title="Compatibility doc to state that ATS v1 is a stable REST API" class="issue-link" data-issue-key="YARN-3539"><del>HADOOP-11826</del></a> patches the hadoop compatibility document to add timeline server to the list of stable APIs.</p>
</comment>
<comment id="14534810" author="stevel@apache.org" created="Fri, 8 May 2015 16:15:11 +0000">
<p>For people who've not been tracking the WiP</p> <ol> <li>the timeline API is pretty thoroughly documented with examples; very close to going in<br/> <a href="https://github.com/steveloughran/hadoop-trunk/blob/stevel/YARN-3539-ATS-compatibility/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-site/src/site/markdown/TimelineServer.md" class="external-link" rel="nofollow">Latest TimelineServer.md</a></li> <li>the timeline server integration is in sync with trunk, especially the <a href="https://issues.apache.org/jira/browse/SPARK-4705" title="Driver retries in cluster mode always fail if event logging is enabled" class="issue-link" data-issue-key="SPARK-4705"><del>SPARK-4705</del></a> changes</li> <li>it has lots of tests. This includes: generating events from a spark context and verifying that they are served up by an an-VM timeline server instance, and retrievable by a REST client, bringing up a Spark History server and making GET requests against it to verifying it hooks up to the server, and other cross-system tests. That's about as much as you can do in a standalone unit test suite.</li> <li>those tests all run happily on unix and windows, provided you set the <tt>-Phadoop-2.6 -Pyarn</tt> flags to request a Hadoop 2.6 profile.</li> <li>and I've tested against hadoop 2.6.0, 2.7.0 &amp; branch-2; everything compiles and runs</li> </ol> <p>Can I get some reviews?</p>
</comment>
<comment id="14541589" author="stevel@apache.org" created="Wed, 13 May 2015 08:29:23 +0000">
<p>+ <a href="https://issues.apache.org/jira/browse/YARN-3539" title="Compatibility doc to state that ATS v1 is a stable REST API" class="issue-link" data-issue-key="YARN-3539"><del>YARN-3539</del></a> is resolved; the <a href="https://github.com/apache/hadoop/blob/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-site/src/site/markdown/TimelineServer.md#Timeline_Server_REST_API_v1" class="external-link" rel="nofollow">v1 timeline </a> is now defined and declared one of the supported REST APIs.</p> <p>I'm also removing <a href="https://issues.apache.org/jira/browse/YARN-2423" title="TimelineClient should wrap all GET APIs to facilitate Java users" class="issue-link" data-issue-key="YARN-2423"><del>YARN-2423</del></a> as a dependency; the latest patch does this itself</p>
</comment>
<comment id="14743421" author="apachespark" created="Mon, 14 Sep 2015 12:08:04 +0000">
<p>User 'steveloughran' has created a pull request for this issue:<br/> <a href="https://github.com/apache/spark/pull/8744" class="external-link" rel="nofollow">https://github.com/apache/spark/pull/8744</a></p>
</comment>
<comment id="14965230" author="apachespark" created="Tue, 20 Oct 2015 15:02:02 +0000">
<p>User 'steveloughran' has created a pull request for this issue:<br/> <a href="https://github.com/apache/spark/pull/9182" class="external-link" rel="nofollow">https://github.com/apache/spark/pull/9182</a></p>
</comment>
<comment id="15076344" author="apachespark" created="Fri, 1 Jan 2016 17:33:04 +0000">
<p>User 'steveloughran' has created a pull request for this issue:<br/> <a href="https://github.com/apache/spark/pull/10545" class="external-link" rel="nofollow">https://github.com/apache/spark/pull/10545</a></p>
</comment>
</comments>
<issuelinks>
<issuelinktype id="10030">
<name>Reference</name>
<outwardlinks description="relates to">
<issuelink>
<issuekey id="12686232">YARN-1530</issuekey>
</issuelink>
</outwardlinks>
<inwardlinks description="is related to">
<issuelink>
<issuekey id="12908530">SPARK-11373</issuekey>
</issuelink>
</inwardlinks>
</issuelinktype>
<issuelinktype id="10001">
<name>dependent</name>
<outwardlinks description="depends upon">
<issuelink>
<issuekey id="12820123">HADOOP-11822</issuekey>
</issuelink>
<issuelink>
<issuekey id="12820320">YARN-3539</issuekey>
</issuelink>
</outwardlinks>
</issuelinktype>
</issuelinks>
<attachments>
<attachment id="12699750" name="SPARK-1537.txt" size="3948" author="zzhan" created="Thu, 19 Feb 2015 22:02:20 +0000"/>
<attachment id="12699749" name="spark-1573.patch" size="39062" author="zzhan" created="Thu, 19 Feb 2015 22:01:17 +0000"/>
</attachments>
<subtasks>
<subtask id="12907911">SPARK-11314</subtask>
<subtask id="12907913">SPARK-11315</subtask>
<subtask id="12907989">SPARK-11323</subtask>
</subtasks>
<customfields>
<customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
<customfieldname>Attachment count</customfieldname>
<customfieldvalues>
<customfieldvalue>2.0</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
<customfieldname>Date of First Response</customfieldname>
<customfieldvalues>
<customfieldvalue>Tue, 5 Aug 2014 19:53:50 +0000</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Global Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>387702</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
<customfieldname>Last public comment date</customfieldname>
<customfieldvalues>43 weeks, 6 days ago</customfieldvalues>
</customfield>
<customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
<customfieldname>Rank</customfieldname>
<customfieldvalues>
<customfieldvalue>0|i1usdb:</customfieldvalue>
</customfieldvalues>
</customfield>
<customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
<customfieldname>Rank (Obsolete)</customfieldname>
<customfieldvalues>
<customfieldvalue>387963</customfieldvalue>
</customfieldvalues>
</customfield>
</customfields>
</item>
</channel>
</rss>
